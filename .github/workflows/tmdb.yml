name: TMDB CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.12
        cache: 'pip'
    - name: Install prerequisites
      uses: tecolicom/actions-use-apt-tools@v1
      with:
        tools: 'libsnappy-dev gcc python3-dev libkrb5-dev'
        cache: yes
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py behave

  build:
    runs-on: ubuntu-latest
    needs:
      - test
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: seppaleinen/worldinmovies_tmdb
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=seppaleinen/worldinmovies_tmdb,push-by-digest=true,name-canonical=true,push=true
          cache-from: type=registry,ref=seppaleinen/worldinmovies_tmdb:latest
          cache-to: type=inline
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: seppaleinen/worldinmovies_tmdb
          tags: |
            # set latest tag for master branch
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD}}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'seppaleinen/worldinmovies_tmdb@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect seppaleinen/worldinmovies_tmdb:${{ steps.meta.outputs.version }}          

  integration-test:
    runs-on: ubuntu-latest
    needs:
      - merge
    steps:
      - name: Trigger integration-test workflow
        uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: worldinmovies
          repo: integration-tests
          github_token: ${{ secrets.AUTH_TOKEN }}
          workflow_file_name: IT.yml
          ref: main
          wait_interval: 10
          propagate_failure: true
          trigger_workflow: true
          wait_workflow: true


  deploy:
    runs-on: ubuntu-latest
    needs:
      - integration-test
    steps:
      - name: Trigger integration-test workflow
        uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: worldinmovies
          repo: integration-tests
          github_token: ${{ secrets.AUTH_TOKEN }}
          workflow_file_name: deploy.yml
          ref: main
          wait_interval: 10
          propagate_failure: true
          trigger_workflow: true
          wait_workflow: true
          comment_downstream_url: Triggered by IMDB Workflow

